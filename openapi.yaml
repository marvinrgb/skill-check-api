openapi: 3.0.0
info:
  title: API
  version: 1.0.0
paths:
  /api/auth/login:
    post:
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  token:
                    type: string
        '400':
          description: Invalid input
  /api/auth/register:
    post:
      summary: User registration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                      username:
                        type: string
                      password:
                        type: string
                      created_at:
                        type: string
                        format: date-time
                      first_name:
                        type: string
                        nullable: true
                      last_name:
                        type: string
                        nullable: true
        '400':
          description: Invalid input
  /api/auth/info:
    get:
      summary: Get user information
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User information
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  username:
                    type: string
                  created_at:
                    type: string
                    format: date-time
                  first_name:
                    type: string
                    nullable: true
                  last_name:
                    type: string
                    nullable: true
        '401':
          description: Unauthorized
  /api/highscore:
    post:
      summary: Create a new highscore
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                game_id:
                  type: string
                highscore_value:
                  type: number
      responses:
        '201':
          description: Highscore created
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
  /api/highscore/{game_id}:
    get:
      summary: Get highscores for a game
      parameters:
        - name: game_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A list of highscores
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    created_at:
                      type: string
                      format: date-time
                    value:
                      type: number
                    user:
                      type: object
                      properties:
                        username:
                          type: string
        '400':
          description: Invalid input
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
